//----------------------------------------------------
  output 1 of SuperMarket.java
//----------------------------------------------------
Test file: resources/inventory_log.txt

NOTES: Tests the LazySearchTree by adding and removing items from the inventory
-----------------------------------------------------

Test file: resources/inventory_log.txt 


Update at line #1: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:1  

Testing traversing "soft" inventory:
soup:1  


at line #1: add soup
First item: soup:1 
Last item: soup:1 


Update at line #2: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:2  

Testing traversing "soft" inventory:
soup:2  


at line #2: add soup
First item: soup:2 
Last item: soup:2 


Update at line #3: add milk
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:1  soup:2  

Testing traversing "soft" inventory:
milk:1  soup:2  


at line #3: add milk
First item: milk:1 
Last item: soup:2 


Update at line #4: add milk
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:2  

Testing traversing "soft" inventory:
milk:2  soup:2  


at line #4: add milk
First item: milk:2 
Last item: soup:2 


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2  

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2  


at line #5: add apples
First item: apples:1 
Last item: soup:2 


Update at line #6: add tomato
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2  tomato:1  

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2  tomato:1  


at line #6: add tomato
First item: apples:1 
Last item: tomato:1 


Update at line #7: add avocado
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  avocado:1  milk:2  soup:2  tomato:1  

Testing traversing "soft" inventory:
apples:1  avocado:1  milk:2  soup:2  tomato:1  


at line #7: add avocado
First item: apples:1 
Last item: tomato:1 


Update at line #8: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:1  

Testing traversing "soft" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:1  


at line #8: add eggplant
First item: apples:1 
Last item: tomato:1 


Update at line #9: add tomato
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:2  

Testing traversing "soft" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:2  


at line #9: add tomato
First item: apples:1 
Last item: tomato:2 


Update at line #10: add onion
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  avocado:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2  

Testing traversing "soft" inventory:
apples:1  avocado:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2  


at line #10: add onion
First item: apples:1 
Last item: tomato:2 


Update at line #11: add beans
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:1  avocado:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2  

Testing traversing "soft" inventory:
apples:1  avocado:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2  


at line #11: add beans
First item: apples:1 
Last item: tomato:2 


Update at line #12: add beans
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:1  avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2  

Testing traversing "soft" inventory:
apples:1  avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2  


at line #12: add beans
First item: apples:1 
Last item: tomato:2 


Update at line #13: buy apples
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2  

Testing traversing "soft" inventory:
avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2  


at line #13: buy apples
First item: avocado:1 
Last item: tomato:2 

Warning: Unable to fulfill request: at line #14: buy fish 
Warning: Item fish is out of stock.

at line #14: buy fish
First item: avocado:1 
Last item: tomato:2 


Update at line #15: add pie
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:2  

Testing traversing "soft" inventory:
avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:2  


at line #15: add pie
First item: avocado:1 
Last item: tomato:2 


Update at line #16: add tomato
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3  


at line #16: add tomato
First item: avocado:1 
Last item: tomato:3 


Update at line #17: add cake
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3  


at line #17: add cake
First item: avocado:1 
Last item: tomato:3 


Update at line #18: add fish
"hard" number of unique items (i.e. mSizeHard) = 11
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  


at line #18: add fish
First item: avocado:1 
Last item: tomato:3 


Update at line #19: add chicken
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  


at line #19: add chicken
First item: avocado:1 
Last item: tomato:3 


Update at line #20: add cereal
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  


at line #20: add cereal
First item: avocado:1 
Last item: tomato:3 


Update at line #21: add cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3  


at line #21: add cookies
First item: avocado:1 
Last item: tomato:3 


Update at line #22: buy onion
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:0  pie:1  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  pie:1  soup:2  tomato:3  


at line #22: buy onion
First item: avocado:1 
Last item: tomato:3 


Update at line #23: buy pie
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3  


at line #23: buy pie
First item: avocado:1 
Last item: tomato:3 


Update at line #24: buy cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3  


at line #24: buy cookies
First item: avocado:1 
Last item: tomato:3 


Update at line #25: add apples
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:1  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3  


at line #25: add apples
First item: apples:1 
Last item: tomato:3 


Update at line #26: add basil
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3  


at line #26: add basil
First item: apples:1 
Last item: tomato:3 


Update at line #27: add juice
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  soup:2  tomato:3  


at line #27: add juice
First item: apples:1 
Last item: tomato:3 


Update at line #28: add juice
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:2  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  milk:2  soup:2  tomato:3  


at line #28: add juice
First item: apples:1 
Last item: tomato:3 


Update at line #29: add bread
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:2  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  milk:2  soup:2  tomato:3  


at line #29: add bread
First item: apples:1 
Last item: tomato:3 


Update at line #30: add meat
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:2  meat:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3  


at line #30: add meat
First item: apples:1 
Last item: tomato:3 


Update at line #31: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  meat:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3  


at line #31: add eggplant
First item: apples:1 
Last item: tomato:3 


Update at line #32: add bread
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  meat:1  milk:2  onion:0  pie:0  soup:2  tomato:3  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3  


at line #32: add bread
First item: apples:1 
Last item: tomato:3 


Update at line #33: add tomato
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  meat:1  milk:2  onion:0  pie:0  soup:2  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:4  


at line #33: add tomato
First item: apples:1 
Last item: tomato:4 


Update at line #34: buy meat
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  meat:0  milk:2  onion:0  pie:0  soup:2  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  milk:2  soup:2  tomato:4  


at line #34: buy meat
First item: apples:1 
Last item: tomato:4 


Update at line #35: add soup
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  meat:0  milk:2  onion:0  pie:0  soup:3  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  milk:2  soup:3  tomato:4  


at line #35: add soup
First item: apples:1 
Last item: tomato:4 


Update at line #36: add spaghetti
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  meat:0  milk:2  onion:0  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  milk:2  soup:3  spaghetti:1  tomato:4  


at line #36: add spaghetti
First item: apples:1 
Last item: tomato:4 


Update at line #37: add linguine
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:0  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  soup:3  spaghetti:1  tomato:4  


at line #37: add linguine
First item: apples:1 
Last item: tomato:4 


Update at line #38: add onion
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


at line #38: add onion
First item: apples:1 
Last item: tomato:4 


Update at line #39: add cereal
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


at line #39: add cereal
First item: apples:1 
Last item: tomato:4 


Update at line #40: add milk
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:3  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:3  onion:1  soup:3  spaghetti:1  tomato:4  


at line #40: add milk
First item: apples:1 
Last item: tomato:4 


Update at line #41: buy milk
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


at line #41: buy milk
First item: apples:1 
Last item: tomato:4 


Update at line #42: buy bread
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


at line #42: buy bread
First item: apples:1 
Last item: tomato:4 


Update at line #43: buy juice
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


at line #43: buy juice
First item: apples:1 
Last item: tomato:4 

Warning: Unable to fulfill request: at line #44: buy pie 
Warning: Item pie is out of stock.

at line #44: buy pie
First item: apples:1 
Last item: tomato:4 


Update at line #45: buy chicken
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:0  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


at line #45: buy chicken
First item: apples:1 
Last item: tomato:4 




Final state of inventory:
"hard" number of unique items (i.e. mSizeHard) = 20
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:0  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:4  

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4  


Done with SuperMarket.

-----------------------------------------------------

//----------------------------------------------------
  output 2 of SuperMarket.java
//----------------------------------------------------
-----------------------------------------------------
Test file: resources/inventory_short.txt	

NOTES: Short inventory file to test for removal of root node from LazySearchTree
-----------------------------------------------------

Test file: resources/inventory_short.txt 


Update at line #1: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:1  

Testing traversing "soft" inventory:
soup:1  


at line #1: add soup
First item: soup:1 
Last item: soup:1 


Update at line #2: add tangerines
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
soup:1  tangerines:1  

Testing traversing "soft" inventory:
soup:1  tangerines:1  


at line #2: add tangerines
First item: soup:1 
Last item: tangerines:1 


Update at line #3: add turnips
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
soup:1  tangerines:1  turnips:1  


at line #3: add turnips
First item: soup:1 
Last item: turnips:1 


Update at line #4: add milk
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
milk:1  soup:1  tangerines:1  turnips:1  


at line #4: add milk
First item: milk:1 
Last item: turnips:1 


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1  


at line #5: add apples
First item: apples:1 
Last item: turnips:1 


Update at line #6: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:2  milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:2  milk:1  soup:1  tangerines:1  turnips:1  


at line #6: add apples
First item: apples:2 
Last item: turnips:1 


Update at line #7: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:3  milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:3  milk:1  soup:1  tangerines:1  turnips:1  


at line #7: add apples
First item: apples:3 
Last item: turnips:1 


Update at line #8: add bread
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:3  bread:1  milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:3  bread:1  milk:1  soup:1  tangerines:1  turnips:1  


at line #8: add bread
First item: apples:3 
Last item: turnips:1 


Update at line #9: buy soup
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:3  bread:1  milk:1  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:3  bread:1  milk:1  tangerines:1  turnips:1  


at line #9: buy soup
First item: apples:3 
Last item: turnips:1 


Update at line #10: buy milk
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:3  bread:1  milk:0  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:3  bread:1  tangerines:1  turnips:1  


at line #10: buy milk
First item: apples:3 
Last item: turnips:1 


Update at line #11: buy bread
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:3  bread:0  milk:0  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:3  tangerines:1  turnips:1  


at line #11: buy bread
First item: apples:3 
Last item: turnips:1 


Update at line #12: buy apples
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:2  bread:0  milk:0  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:2  tangerines:1  turnips:1  


at line #12: buy apples
First item: apples:2 
Last item: turnips:1 




Final state of inventory:
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:2  bread:0  milk:0  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:2  tangerines:1  turnips:1  


Done with SuperMarket.




-----------------------------------------------------

//----------------------------------------------------
  output 3 of SuperMarket.java
//----------------------------------------------------
-----------------------------------------------------
Test file: resources/inventory_invalid_removal.txt	

NOTES: An example of testing the boundary condition when removing an item that may not exist
-----------------------------------------------------

Test file: resources/inventory_invalid_removal.txt 


Update at line #1: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:1  

Testing traversing "soft" inventory:
soup:1  


at line #1: add soup
First item: soup:1 
Last item: soup:1 


Update at line #2: add tangerines
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
soup:1  tangerines:1  

Testing traversing "soft" inventory:
soup:1  tangerines:1  


at line #2: add tangerines
First item: soup:1 
Last item: tangerines:1 


Update at line #3: add turnips
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
soup:1  tangerines:1  turnips:1  


at line #3: add turnips
First item: soup:1 
Last item: turnips:1 


Update at line #4: add milk
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
milk:1  soup:1  tangerines:1  turnips:1  


at line #4: add milk
First item: milk:1 
Last item: turnips:1 


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1  


at line #5: add apples
First item: apples:1 
Last item: turnips:1 


Update at line #6: add bread
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  soup:1  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  soup:1  tangerines:1  turnips:1  


at line #6: add bread
First item: apples:1 
Last item: turnips:1 


Update at line #7: buy soup
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  tangerines:1  turnips:1  


at line #7: buy soup
First item: apples:1 
Last item: turnips:1 

Warning: Unable to fulfill request: at line #8: buy soup 
Warning: Item soup is out of stock.

at line #8: buy soup
First item: apples:1 
Last item: turnips:1 




Final state of inventory:
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  soup:0  tangerines:1  turnips:1  

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  tangerines:1  turnips:1  


Done with SuperMarket.

-----------------------------------------------------

//----------------------------------------------------
  output 4 of SuperMarket.java
//----------------------------------------------------
-----------------------------------------------------
Test file: resources/test.txt

NOTES: Short test file of testing the boundary condition when removing all the items

Test file: resources/test.txt 


Update at line #1: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:1  

Testing traversing "soft" inventory:
milk:1  


at line #1: add milk
First item: milk:1 
Last item: milk:1 


Update at line #2: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:1  soup:1  

Testing traversing "soft" inventory:
milk:1  soup:1  


at line #2: add soup
First item: milk:1 
Last item: soup:1 


Update at line #3: add apples
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:1  milk:1  soup:1  

Testing traversing "soft" inventory:
apples:1  milk:1  soup:1  


at line #3: add apples
First item: apples:1 
Last item: soup:1 


Update at line #4: add tomato
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:1  milk:1  soup:1  tomato:1  

Testing traversing "soft" inventory:
apples:1  milk:1  soup:1  tomato:1  


at line #4: add tomato
First item: apples:1 
Last item: tomato:1 


Update at line #5: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:1  soup:1  tomato:1  

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:1  soup:1  tomato:1  


at line #5: add eggplant
First item: apples:1 
Last item: tomato:1 


Update at line #6: buy milk
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:0  soup:1  tomato:1  

Testing traversing "soft" inventory:
apples:1  eggplant:1  soup:1  tomato:1  


at line #6: buy milk
First item: apples:1 
Last item: tomato:1 


Update at line #7: buy apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:0  eggplant:1  milk:0  soup:1  tomato:1  

Testing traversing "soft" inventory:
eggplant:1  soup:1  tomato:1  


at line #7: buy apples
First item: eggplant:1 
Last item: tomato:1 


Update at line #8: buy soup
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
apples:0  eggplant:1  milk:0  soup:0  tomato:1  

Testing traversing "soft" inventory:
eggplant:1  tomato:1  


at line #8: buy soup
First item: eggplant:1 
Last item: tomato:1 


Update at line #9: buy tomato
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
apples:0  eggplant:1  milk:0  soup:0  tomato:0  

Testing traversing "soft" inventory:
eggplant:1  


at line #9: buy tomato
First item: eggplant:1 
Last item: eggplant:1 


Update at line #10: buy eggplant
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 0

Testing traversing "hard" inventory:
apples:0  eggplant:0  milk:0  soup:0  tomato:0  

Testing traversing "soft" inventory:



at line #10: buy eggplant
Warning: minimum element not found!
Warning: minimum element not found!Empty here in soft...





Final state of inventory:
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 0

Testing traversing "hard" inventory:
apples:0  eggplant:0  milk:0  soup:0  tomato:0  

Testing traversing "soft" inventory:
Empty here in soft...



Done with SuperMarket.


-----------------------------------------------------

//----------------------------------------------------
  output 5 of FoothillTunesStore.java
//----------------------------------------------------
--------------------------------------------------------------------------------------------

NOTES: Testing all boundary cases such as print or show max, min, when nothing in the tree,
and search or delete a song that a find method cannot find.
--------------------------------------------------------------------------------------------

Welcome! We have over 50000 songs in FoothillTunes store!

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 1

Showing hard: Empty  here in hard..

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 2

Showing soft: Empty here in soft...

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 5
All soft deleted, Nothing to show..

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 6
All soft deleted, Nothing to show..

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 7
Genius Of Love 2002 (featuring Tom Tom Club & Biz Markie)
B-boy Punk Rock 2001
Intro
X-ecution Of A Bum Rush
XL
Play That Beat
X-ecutioners (Theme) Song
You Can't Scratch (Skit)
Play That Beat
Choppin' Niggas Up
On Bended Knee
Hang On
Little More Time
Ring The Alarm
Massa God World
Weary
Want It
Childish Games
What I'm Gonna Do
Not Me
So Amazing
Thou Shall Not Fall
Roll Call
5th Gear
Send Him Our Love

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 3
Please enter the title:
Send Him Our Love
Send Him Our Love:1  succesfully inserted 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 3
Please enter the title:
Intro
Intro:1  succesfully inserted 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 3
Please enter the title:
B-boy Punk Rock 2001
B-boy Punk Rock 2001:1  succesfully inserted 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 3
Please enter the title:
What I'm Gonna Do
What I'm Gonna Do:1  succesfully inserted 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 3
Please enter the title:
Play That Beat
Play That Beat:1  succesfully inserted 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 1

Showing hard: B-boy Punk Rock 2001:1  Intro:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 2

Showing soft: B-boy Punk Rock 2001:1  Intro:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 4
Please enter the name of the song:Intro
Intro:1  succesfully removed 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 1

Showing hard: B-boy Punk Rock 2001:1  Intro:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 2

Showing soft: B-boy Punk Rock 2001:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 4
Please enter the name of the song:B-boy Punk Rock 2001
B-boy Punk Rock 2001:1  succesfully removed 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 4
Please enter the name of the song:Play That Beat
Play That Beat:1  succesfully removed 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 1

Showing hard: B-boy Punk Rock 2001:1  Intro:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 2

Showing soft: Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 5

First in the list:Send Him Our Love:1 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 6

Last in the list:What I'm Gonna Do:1 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 4
Please enter the name of the song:What I'm Gonna Do
What I'm Gonna Do:1  succesfully removed 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 1

Showing hard: B-boy Punk Rock 2001:1  Intro:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 2

Showing soft: Send Him Our Love:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 5

First in the list:Send Him Our Love:1 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 6

Last in the list:Send Him Our Love:1 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 4
Please enter the name of the song:a song
(a song)  Does not exist, please enter another song to remove

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 4
Please enter the name of the song:Send Him Our Love
Send Him Our Love:1  succesfully removed 

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 1

Showing hard: B-boy Punk Rock 2001:1  Intro:1  Play That Beat:1  Send Him Our Love:1  What I'm Gonna Do:1  
___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 2

Showing soft: Empty here in soft...

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 5
All soft deleted, Nothing to show..

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 6
All soft deleted, Nothing to show..

___________________________

Here is what you can do :

1. Show hard Play list
2. Show soft Play list
3. Add a song
4. Remove a Song
5. Show first in the list
6. Show last in the list
7. Show Sample Songs
8.   -EXIT-

Enter your choice: 8
System Exit.

